FROM armhf/python:3.5-alpine

MAINTAINER The Crossbar.io Project <support@crossbario.com>

ENV HOME /node
ENV DEBIAN_FRONTEND noninteractive
ENV PYTHONUNBUFFERED 1
ENV PATH /usr/local/bin:$PATH
ENV CROSSBAR_VERSION 0.15.0

RUN apk --update upgrade \
RUN apk add --virtual build-dependencies \
                            git \
                            build-base \
                            libffi-dev \
                            openssl-dev \
                            linux-headers

# Install Crossbar
RUN pip install -U pip
RUN pip install crossbar==${CROSSBAR_VERSION}

# Remove the build dependencies we no longer need
RUN apk del build-dependencies

# Install some runtime deps
RUN apk add libffi

# clean up and shrink the image size
RUN rm -rf /var/cache/* \
           /tmp/* \
           /etc/ssl \
           /usr/share/man \
           /var/cache/apk/* \
           /root/.npm \
           /root/.node-gyp \
           /root/.gnupg \
           /usr/lib/node_modules/npm/man \
           /usr/lib/node_modules/npm/doc \
           /usr/lib/node_modules/npm/html

# add our user and group
RUN addgroup crossbar
RUN adduser -D -h /node -G crossbar -g "Crossbar.io Service" crossbar

# test if everything installed properly
RUN crossbar version

# initialize a Crossbar.io node
COPY ./node/ /node/
RUN chown -R crossbar:crossbar /node

# entrypoint for the Docker image is the Crossbar.io executable
WORKDIR /node

# run under this user, and expose default port
USER crossbar
EXPOSE 8080 8000
ENTRYPOINT ["crossbar", "start", "--cbdir", "/node/.crossbar"]
